#include <stdio.h>
#include <stdlib.h>
#include <iostream>

using namespace std;

  int main(void)
    {
    	int m1 = 0, n1 = 0;
    	int m2 = 0, n2 = 0;
    	int MetrixA[100][100];
    	int MetrixB[100][100];
    	int option, temp;
    	int Sum[100][100];
    	char Name_Metrix[100][100];
    	
    	//	---------Input Metrix A---------  //
    	printf("\n\t\t***************************************\t\t\n");
    	printf("\t----------------------------------\n");
    	printf("\tMetrix A ");
    	printf("\n");
    	printf("\tEnter the row : ");
    	scanf("%d",&m1);
    	printf("\tEnter the column : ");
    	scanf("%d",&n1);
    	while (m1<=0)
    	  {
    	  	printf("\tTry Again. Enter the Row : ");
        	scanf("%d",&m1);
		  }
		while (n1<=0)
		  {
		  	printf("\tTry Again. Enter the column :");
        	scanf("%d",&n1);
		  }
		
		printf("\n");
		
		for(int i = 0 ; i <= m1-1 ; i++)
    	  {
    	  	for(int j = 0 ; j <= n1-1 ; j++)
    	  	  {
    	  	  	printf("\tEnter a Number Metrix A [%d][%d] : ",i,j);
    	  	  	scanf("%d",&MetrixA[i][j]);
			  }
		  }
    	system("cls");
    	//	---------End---------  //
    	
    	//	---------Input Metrix B---------  //	
    	printf("\n\t\t***************************************\t\t\n");
    	printf("\t----------------------------------\n");
    	printf("\tMetrix B ");
    	printf("\n");
    	printf("\tEnter the row : ");
    	scanf("%d",&m2);
    	printf("\tEnter the column : ");
    	scanf("%d",&n2);
    	while (m2<=0)
    	  {
    	  	printf("\tTry Again. Enter the Row : ");
        	scanf("%d",&m2);
		  }
		while (n2<=0)
		  {
		  	printf("\tTry Again. Enter the column :");
        	scanf("%d",&n2);
		  }
		
		printf("\n");
		
		for(int i = 0 ; i <= m2-1 ; i++)
    	  {
    	  	for(int j = 0 ; j <= n2-1 ; j++)
    	  	  {
    	  	  	printf("\tEnter a Number Metrix B [%d][%d] : ",i,j);
    	  	  	scanf("%d",&MetrixB[i][j]);
			  }
		  }
    	system("cls");
    	//	---------End---------  //
    	
    	//	---------Show MetrixA---------  //
    	printf("\n***************************************\t\t\n");
    	printf("Metrix A : \n");
    	for(int i = 0 ; i <= m1-1 ; i++)
    	  {
    	  	printf("\n");
    	  	printf("\t");
    	  	printf(" |   ");
    	  	for(int j = 0 ; j <= n1-1 ; j++)
    	  	  {
    	  	  	printf(" %d ",MetrixA[i][j]);
		   	  }
    	  	printf("   |");
		  }
		option = 0;
		printf("\n");
		printf("\n***************************************\t\t\n");
		printf("----------------------------------\n");
		printf("\tSelect one of the option \n");
		printf("\t1.Next step ");
		printf("\n");
		printf("\tEnter a Number : ");
		scanf("%d",&option);
		while(option > 1 && option <0)
		  {
		  	printf("\tEnter a Number : ");
	    	scanf("%d",&option);
		  }  
		printf("\n***************************************\t\t\n");
		  
		system("cls");
    	//	---------End---------  //
    	
    	//	---------Show Metrix B---------  //
    	printf("\n***************************************\t\t\n");
    	printf("Metrix B : \n");
    	for(int i = 0 ; i <= m2-1 ; i++)
    	  {
    	  	printf("\n");
    	  	printf("\t");
    	  	printf(" |   ");
    	  	for(int j = 0 ; j <= n2-1 ; j++)
    	  	  {
    	  	  	printf(" %d ",MetrixB[i][j]);
		   	  }
    	  	printf("   |");
		  }
		option = 0;
		printf("\n");
		printf("\n***************************************\t\t\n");
		printf("----------------------------------\n");
		printf("\tSelect one of the option \n");
		printf("\t1.Next step ");
		printf("\n");
		printf("\tEnter a Number : ");
		scanf("%d",&option);
		while(option > 1 && option <0)
		  {
		  	printf("\tEnter a Number : ");
	    	scanf("%d",&option);
		  }  
		printf("\n***************************************\t\t\n");
		  
		system("cls");
        //	---------End---------  //
    	
    	//	---------option---------  //
    	printf("\n\t\t***************************************\t\t\n");
    	printf("\tSelect one of the option \n");
    	printf("\t----------------------------------\n");
    	printf("\t1. Positive Matrix. \n");
    	printf("\t2. Negative Matrix. \n");
    	printf("\t3. Multiply matrix. \n");
    	option = 0;
    	printf("\tEnter the number : ");
    	scanf("%d",&option);
    	while (option<=0 && option>=4)
    	  {
    	  	printf("\tTry Again. Enter the number : ");
    	  	scanf("%d",&option);
		  }
    	system("cls");
    	//	---------End---------  //
    	
    	//	---------Work---------  //
    	if(option == 1)
    	  {
    	  	if(m1==n2)
    	  	  {
    	  	  	for(int i = 0 ; i <= m1-1 ; i++)
    	  	  	  {
    	  	  	  	for(int j = 0 ; j <= n2-1 ; j++)
    	  	  	  	  {
    	  	  	  	  	Sum[i][j] = MetrixA[i][j] + MetrixB[i][j];
			 		  }
				  }
				system("cls");
				for(int i = 0 ; i <= m1-1 ; i++)  
				 {
				  	printf("\n");
    	            printf("\t");
    	  	        for(int j = 0 ; j <= n2-1 ; j++)
    	  	          {
    	  	  	        printf(" %d ",Sum[i][j]);
		   	          }
				 }
			  }
			else
			    printf("A number of the matrix is not valid.");
		  }
		else if(option == 2)
		  {
		  	if(m1==n2)
    	  	  {
    	  	  	for(int i = 0 ; i <= m1-1 ; i++)
    	  	  	  {
    	  	  	  	for(int j = 0 ; j <= n2-1 ; j++)
    	  	  	  	  {
    	  	  	  	  	Sum[i][j] = MetrixA[i][j] - MetrixB[i][j];
			 		  }
				  }
				for(int i = 0 ; i <= m1-1 ; i++)  
				 {
				  	printf("\n");
    	            printf("\t");
    	  	        for(int j = 0 ; j <= n2-1 ; j++)
    	  	          {
    	  	  	        printf(" %d ",Sum[i][j]);
		   	          }
				 }
			  }
			else
			    printf("A number of the matrix is not valid.");
		  }
		else if(option == 3)
		  {
		  	if(m1==n2)
    	  	  {
    	  	  	for(int i = 0 ; i <= m1-1 ; i++)
    	  	  	  {
    	  	  	  	for(int j = 0 ; j <= n2-1 ; j++)
    	  	  	  	  {
    	  	  	  	  	temp = 0;
    	  	  	  	  	for(int k = 0 ; k <= m2-1 ; k++)
    	  	  	  	  	  {
    	  	  	  	  	  	temp = temp + MetrixA[i][k] * MetrixB[k][i];
    	  	  	  	  	  	Sum[i][j] = temp;
					      }
			 		  }
				  }
				for(int i = 0 ; i <= m1-1 ; i++)  
				 {
				  	printf("\n");
    	            printf("\t");
    	  	        for(int j = 0 ; j <= n2-1 ; j++)
    	  	  	          {
    	  	  	          	printf(" %d ",Sum[i][j]);
						  }
				 }
			  } 
			else
			    printf("A number of the matrix is not valid.");
		  }
    	//	---------End---------  //
	}
